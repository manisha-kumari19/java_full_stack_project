{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let PersonalComponent = class PersonalComponent {\n  constructor(http) {\n    this.http = http;\n    this.selectedFile = null;\n    this.imageUrl = null;\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n    this.previewImage();\n  }\n  previewImage() {\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imageUrl = reader.result;\n    };\n    reader.readAsDataURL(this.selectedFile);\n  }\n  uploadImage() {\n    const uploadData = new FormData();\n    uploadData.append('image', this.selectedFile, this.selectedFile?.name);\n    this.http.post('http://localhost:8080/api/upload', uploadData).subscribe(response => {\n      console.log('Image uploaded successfully.');\n    }, error => {\n      console.error('Error uploading image:', error);\n    });\n  }\n};\nPersonalComponent = __decorate([Component({\n  selector: 'app-personal',\n  templateUrl: './personal.component.html',\n  styleUrls: ['./personal.component.css']\n})], PersonalComponent);","map":{"version":3,"names":["Component","PersonalComponent","constructor","http","selectedFile","imageUrl","onFileSelected","event","target","files","previewImage","reader","FileReader","onload","result","readAsDataURL","uploadImage","uploadData","FormData","append","name","post","subscribe","response","console","log","error","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/manisha/crud-application/src/app/MyComponent/personal/personal.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-personal',\n  templateUrl: './personal.component.html',\n  styleUrls: ['./personal.component.css']\n})\nexport class PersonalComponent {\n  selectedFile: File | null = null;\n  imageUrl: string | ArrayBuffer | null = null;\n\n  constructor(private http: HttpClient) {}\n\n  onFileSelected(event: any) {\n    this.selectedFile = event.target.files[0];\n    this.previewImage();\n}\n\npreviewImage() {\n  const reader = new FileReader();\n  reader.onload = () => {\n    this.imageUrl = reader.result;\n  };\n  reader.readAsDataURL(this.selectedFile as Blob);\n}\n\nuploadImage() {\n  const uploadData = new FormData();\n  uploadData.append('image', this.selectedFile as Blob, this.selectedFile?.name);\n\n  this.http.post<any>('http://localhost:8080/api/upload', uploadData).subscribe(\n    (response) => {\n      console.log('Image uploaded successfully.');\n    },\n    (error) => {\n      console.error('Error uploading image:', error);\n    }\n  );\n}\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAQlC,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAI5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHxB,KAAAC,YAAY,GAAgB,IAAI;IAChC,KAAAC,QAAQ,GAAgC,IAAI;EAEL;EAEvCC,cAAcA,CAACC,KAAU;IACvB,IAAI,CAACH,YAAY,GAAGG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACzC,IAAI,CAACC,YAAY,EAAE;EACvB;EAEAA,YAAYA,CAAA;IACV,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;IAC/BD,MAAM,CAACE,MAAM,GAAG,MAAK;MACnB,IAAI,CAACR,QAAQ,GAAGM,MAAM,CAACG,MAAM;IAC/B,CAAC;IACDH,MAAM,CAACI,aAAa,CAAC,IAAI,CAACX,YAAoB,CAAC;EACjD;EAEAY,WAAWA,CAAA;IACT,MAAMC,UAAU,GAAG,IAAIC,QAAQ,EAAE;IACjCD,UAAU,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACf,YAAoB,EAAE,IAAI,CAACA,YAAY,EAAEgB,IAAI,CAAC;IAE9E,IAAI,CAACjB,IAAI,CAACkB,IAAI,CAAM,kCAAkC,EAAEJ,UAAU,CAAC,CAACK,SAAS,CAC1EC,QAAQ,IAAI;MACXC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC7C,CAAC,EACAC,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,CACF;EACH;CACC;AAhCYzB,iBAAiB,GAAA0B,UAAA,EAL7B3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACW7B,iBAAiB,CAgC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}